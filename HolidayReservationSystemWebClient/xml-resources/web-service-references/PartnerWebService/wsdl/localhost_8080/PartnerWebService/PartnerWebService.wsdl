<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.4.3 (RELEASE-2.4.3-ad3323c; 2019-01-21T17:46:06+0000) JAXWS-RI/2.3.2 JAXWS-API/2.3.2 JAXB-RI/2.3.2 JAXB-API/2.3.2 git-revision#unknown. --><!-- Generated by JAX-WS RI (https://github.com/eclipse-ee4j/metro-jax-ws). RI's version is Metro/2.4.3 (RELEASE-2.4.3-ad3323c; 2019-01-21T17:46:06+0000) JAXWS-RI/2.3.2 JAXWS-API/2.3.2 JAXB-RI/2.3.2 JAXB-API/2.3.2 git-revision#unknown. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://ws.session.ejb/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://ws.session.ejb/" name="PartnerWebService">
<types>
<xsd:schema>
<xsd:import namespace="http://ws.session.ejb/" schemaLocation="http://localhost:8080/PartnerWebService/PartnerWebService?xsd=1"/>
</xsd:schema>
</types>
<message name="retrieveReservationByReservationId">
<part name="parameters" element="tns:retrieveReservationByReservationId"/>
</message>
<message name="retrieveReservationByReservationIdResponse">
<part name="parameters" element="tns:retrieveReservationByReservationIdResponse"/>
</message>
<message name="ReservationNotFoundException">
<part name="fault" element="tns:ReservationNotFoundException"/>
</message>
<message name="retrieveCarCategoryByCategoryName">
<part name="parameters" element="tns:retrieveCarCategoryByCategoryName"/>
</message>
<message name="retrieveCarCategoryByCategoryNameResponse">
<part name="parameters" element="tns:retrieveCarCategoryByCategoryNameResponse"/>
</message>
<message name="CarCategoryNotFoundException">
<part name="fault" element="tns:CarCategoryNotFoundException"/>
</message>
<message name="partnerLogin">
<part name="parameters" element="tns:partnerLogin"/>
</message>
<message name="partnerLoginResponse">
<part name="parameters" element="tns:partnerLoginResponse"/>
</message>
<message name="InvalidLoginCredentialException">
<part name="fault" element="tns:InvalidLoginCredentialException"/>
</message>
<message name="PartnerNotFoundException">
<part name="fault" element="tns:PartnerNotFoundException"/>
</message>
<message name="calculateRefundPenalty">
<part name="parameters" element="tns:calculateRefundPenalty"/>
</message>
<message name="calculateRefundPenaltyResponse">
<part name="parameters" element="tns:calculateRefundPenaltyResponse"/>
</message>
<message name="removeReservationByPartner">
<part name="parameters" element="tns:removeReservationByPartner"/>
</message>
<message name="removeReservationByPartnerResponse">
<part name="parameters" element="tns:removeReservationByPartnerResponse"/>
</message>
<message name="retrieveCustomerByCustomerEmail">
<part name="parameters" element="tns:retrieveCustomerByCustomerEmail"/>
</message>
<message name="retrieveCustomerByCustomerEmailResponse">
<part name="parameters" element="tns:retrieveCustomerByCustomerEmailResponse"/>
</message>
<message name="CustomerNotFoundException">
<part name="fault" element="tns:CustomerNotFoundException"/>
</message>
<message name="createNewReservationByCategory">
<part name="parameters" element="tns:createNewReservationByCategory"/>
</message>
<message name="createNewReservationByCategoryResponse">
<part name="parameters" element="tns:createNewReservationByCategoryResponse"/>
</message>
<message name="OutletNotFoundException">
<part name="fault" element="tns:OutletNotFoundException"/>
</message>
<message name="UnknownPersistenceException">
<part name="fault" element="tns:UnknownPersistenceException"/>
</message>
<message name="InputDataValidationException">
<part name="fault" element="tns:InputDataValidationException"/>
</message>
<message name="createNewCustomer">
<part name="parameters" element="tns:createNewCustomer"/>
</message>
<message name="createNewCustomerResponse">
<part name="parameters" element="tns:createNewCustomerResponse"/>
</message>
<message name="CustomerExistException">
<part name="fault" element="tns:CustomerExistException"/>
</message>
<message name="searchAvailableCarCategories">
<part name="parameters" element="tns:searchAvailableCarCategories"/>
</message>
<message name="searchAvailableCarCategoriesResponse">
<part name="parameters" element="tns:searchAvailableCarCategoriesResponse"/>
</message>
<message name="CarModelNotFoundException">
<part name="fault" element="tns:CarModelNotFoundException"/>
</message>
<message name="retrieveRentalRateByCarCategory">
<part name="parameters" element="tns:retrieveRentalRateByCarCategory"/>
</message>
<message name="retrieveRentalRateByCarCategoryResponse">
<part name="parameters" element="tns:retrieveRentalRateByCarCategoryResponse"/>
</message>
<message name="checkCustomerExist">
<part name="parameters" element="tns:checkCustomerExist"/>
</message>
<message name="checkCustomerExistResponse">
<part name="parameters" element="tns:checkCustomerExistResponse"/>
</message>
<message name="calculateRentalRate">
<part name="parameters" element="tns:calculateRentalRate"/>
</message>
<message name="calculateRentalRateResponse">
<part name="parameters" element="tns:calculateRentalRateResponse"/>
</message>
<message name="RentalRateNotAvailableException">
<part name="fault" element="tns:RentalRateNotAvailableException"/>
</message>
<message name="checkOutletIsOpen">
<part name="parameters" element="tns:checkOutletIsOpen"/>
</message>
<message name="checkOutletIsOpenResponse">
<part name="parameters" element="tns:checkOutletIsOpenResponse"/>
</message>
<message name="retrieveReservationsByPartnerUsername">
<part name="parameters" element="tns:retrieveReservationsByPartnerUsername"/>
</message>
<message name="retrieveReservationsByPartnerUsernameResponse">
<part name="parameters" element="tns:retrieveReservationsByPartnerUsernameResponse"/>
</message>
<portType name="PartnerWebService">
<operation name="retrieveReservationByReservationId">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveReservationByReservationIdRequest" message="tns:retrieveReservationByReservationId"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveReservationByReservationIdResponse" message="tns:retrieveReservationByReservationIdResponse"/>
<fault message="tns:ReservationNotFoundException" name="ReservationNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveReservationByReservationId/Fault/ReservationNotFoundException"/>
</operation>
<operation name="retrieveCarCategoryByCategoryName">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveCarCategoryByCategoryNameRequest" message="tns:retrieveCarCategoryByCategoryName"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveCarCategoryByCategoryNameResponse" message="tns:retrieveCarCategoryByCategoryNameResponse"/>
<fault message="tns:CarCategoryNotFoundException" name="CarCategoryNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveCarCategoryByCategoryName/Fault/CarCategoryNotFoundException"/>
</operation>
<operation name="partnerLogin">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/partnerLoginRequest" message="tns:partnerLogin"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/partnerLoginResponse" message="tns:partnerLoginResponse"/>
<fault message="tns:InvalidLoginCredentialException" name="InvalidLoginCredentialException" wsam:Action="http://ws.session.ejb/PartnerWebService/partnerLogin/Fault/InvalidLoginCredentialException"/>
<fault message="tns:PartnerNotFoundException" name="PartnerNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/partnerLogin/Fault/PartnerNotFoundException"/>
</operation>
<operation name="calculateRefundPenalty">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/calculateRefundPenaltyRequest" message="tns:calculateRefundPenalty"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/calculateRefundPenaltyResponse" message="tns:calculateRefundPenaltyResponse"/>
<fault message="tns:ReservationNotFoundException" name="ReservationNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/calculateRefundPenalty/Fault/ReservationNotFoundException"/>
</operation>
<operation name="removeReservationByPartner">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/removeReservationByPartnerRequest" message="tns:removeReservationByPartner"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/removeReservationByPartnerResponse" message="tns:removeReservationByPartnerResponse"/>
<fault message="tns:ReservationNotFoundException" name="ReservationNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/removeReservationByPartner/Fault/ReservationNotFoundException"/>
<fault message="tns:PartnerNotFoundException" name="PartnerNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/removeReservationByPartner/Fault/PartnerNotFoundException"/>
</operation>
<operation name="retrieveCustomerByCustomerEmail">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveCustomerByCustomerEmailRequest" message="tns:retrieveCustomerByCustomerEmail"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveCustomerByCustomerEmailResponse" message="tns:retrieveCustomerByCustomerEmailResponse"/>
<fault message="tns:CustomerNotFoundException" name="CustomerNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveCustomerByCustomerEmail/Fault/CustomerNotFoundException"/>
</operation>
<operation name="createNewReservationByCategory">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/createNewReservationByCategoryRequest" message="tns:createNewReservationByCategory"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/createNewReservationByCategoryResponse" message="tns:createNewReservationByCategoryResponse"/>
<fault message="tns:CarCategoryNotFoundException" name="CarCategoryNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/createNewReservationByCategory/Fault/CarCategoryNotFoundException"/>
<fault message="tns:OutletNotFoundException" name="OutletNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/createNewReservationByCategory/Fault/OutletNotFoundException"/>
<fault message="tns:CustomerNotFoundException" name="CustomerNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/createNewReservationByCategory/Fault/CustomerNotFoundException"/>
<fault message="tns:UnknownPersistenceException" name="UnknownPersistenceException" wsam:Action="http://ws.session.ejb/PartnerWebService/createNewReservationByCategory/Fault/UnknownPersistenceException"/>
<fault message="tns:InputDataValidationException" name="InputDataValidationException" wsam:Action="http://ws.session.ejb/PartnerWebService/createNewReservationByCategory/Fault/InputDataValidationException"/>
</operation>
<operation name="createNewCustomer">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/createNewCustomerRequest" message="tns:createNewCustomer"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/createNewCustomerResponse" message="tns:createNewCustomerResponse"/>
<fault message="tns:CustomerExistException" name="CustomerExistException" wsam:Action="http://ws.session.ejb/PartnerWebService/createNewCustomer/Fault/CustomerExistException"/>
<fault message="tns:UnknownPersistenceException" name="UnknownPersistenceException" wsam:Action="http://ws.session.ejb/PartnerWebService/createNewCustomer/Fault/UnknownPersistenceException"/>
<fault message="tns:InputDataValidationException" name="InputDataValidationException" wsam:Action="http://ws.session.ejb/PartnerWebService/createNewCustomer/Fault/InputDataValidationException"/>
</operation>
<operation name="searchAvailableCarCategories">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/searchAvailableCarCategoriesRequest" message="tns:searchAvailableCarCategories"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/searchAvailableCarCategoriesResponse" message="tns:searchAvailableCarCategoriesResponse"/>
<fault message="tns:CarModelNotFoundException" name="CarModelNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/searchAvailableCarCategories/Fault/CarModelNotFoundException"/>
</operation>
<operation name="retrieveRentalRateByCarCategory">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveRentalRateByCarCategoryRequest" message="tns:retrieveRentalRateByCarCategory"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveRentalRateByCarCategoryResponse" message="tns:retrieveRentalRateByCarCategoryResponse"/>
</operation>
<operation name="checkCustomerExist">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/checkCustomerExistRequest" message="tns:checkCustomerExist"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/checkCustomerExistResponse" message="tns:checkCustomerExistResponse"/>
<fault message="tns:CustomerNotFoundException" name="CustomerNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/checkCustomerExist/Fault/CustomerNotFoundException"/>
</operation>
<operation name="calculateRentalRate">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/calculateRentalRateRequest" message="tns:calculateRentalRate"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/calculateRentalRateResponse" message="tns:calculateRentalRateResponse"/>
<fault message="tns:RentalRateNotAvailableException" name="RentalRateNotAvailableException" wsam:Action="http://ws.session.ejb/PartnerWebService/calculateRentalRate/Fault/RentalRateNotAvailableException"/>
</operation>
<operation name="checkOutletIsOpen">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/checkOutletIsOpenRequest" message="tns:checkOutletIsOpen"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/checkOutletIsOpenResponse" message="tns:checkOutletIsOpenResponse"/>
<fault message="tns:OutletNotFoundException" name="OutletNotFoundException" wsam:Action="http://ws.session.ejb/PartnerWebService/checkOutletIsOpen/Fault/OutletNotFoundException"/>
</operation>
<operation name="retrieveReservationsByPartnerUsername">
<input wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveReservationsByPartnerUsernameRequest" message="tns:retrieveReservationsByPartnerUsername"/>
<output wsam:Action="http://ws.session.ejb/PartnerWebService/retrieveReservationsByPartnerUsernameResponse" message="tns:retrieveReservationsByPartnerUsernameResponse"/>
</operation>
</portType>
<binding name="PartnerWebServicePortBinding" type="tns:PartnerWebService">
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
<operation name="retrieveReservationByReservationId">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ReservationNotFoundException">
<soap:fault name="ReservationNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="retrieveCarCategoryByCategoryName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CarCategoryNotFoundException">
<soap:fault name="CarCategoryNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="partnerLogin">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="InvalidLoginCredentialException">
<soap:fault name="InvalidLoginCredentialException" use="literal"/>
</fault>
<fault name="PartnerNotFoundException">
<soap:fault name="PartnerNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="calculateRefundPenalty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ReservationNotFoundException">
<soap:fault name="ReservationNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="removeReservationByPartner">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="ReservationNotFoundException">
<soap:fault name="ReservationNotFoundException" use="literal"/>
</fault>
<fault name="PartnerNotFoundException">
<soap:fault name="PartnerNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="retrieveCustomerByCustomerEmail">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CustomerNotFoundException">
<soap:fault name="CustomerNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="createNewReservationByCategory">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CarCategoryNotFoundException">
<soap:fault name="CarCategoryNotFoundException" use="literal"/>
</fault>
<fault name="OutletNotFoundException">
<soap:fault name="OutletNotFoundException" use="literal"/>
</fault>
<fault name="CustomerNotFoundException">
<soap:fault name="CustomerNotFoundException" use="literal"/>
</fault>
<fault name="UnknownPersistenceException">
<soap:fault name="UnknownPersistenceException" use="literal"/>
</fault>
<fault name="InputDataValidationException">
<soap:fault name="InputDataValidationException" use="literal"/>
</fault>
</operation>
<operation name="createNewCustomer">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CustomerExistException">
<soap:fault name="CustomerExistException" use="literal"/>
</fault>
<fault name="UnknownPersistenceException">
<soap:fault name="UnknownPersistenceException" use="literal"/>
</fault>
<fault name="InputDataValidationException">
<soap:fault name="InputDataValidationException" use="literal"/>
</fault>
</operation>
<operation name="searchAvailableCarCategories">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CarModelNotFoundException">
<soap:fault name="CarModelNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="retrieveRentalRateByCarCategory">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
<operation name="checkCustomerExist">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="CustomerNotFoundException">
<soap:fault name="CustomerNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="calculateRentalRate">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="RentalRateNotAvailableException">
<soap:fault name="RentalRateNotAvailableException" use="literal"/>
</fault>
</operation>
<operation name="checkOutletIsOpen">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
<fault name="OutletNotFoundException">
<soap:fault name="OutletNotFoundException" use="literal"/>
</fault>
</operation>
<operation name="retrieveReservationsByPartnerUsername">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal"/>
</input>
<output>
<soap:body use="literal"/>
</output>
</operation>
</binding>
<service name="PartnerWebService">
<port name="PartnerWebServicePort" binding="tns:PartnerWebServicePortBinding">
<soap:address location="http://localhost:8080/PartnerWebService/PartnerWebService"/>
</port>
</service>
</definitions>